@model IEnumerable<QuotationAppv1.Models.Quotation>
@using GridMvc.Html 
@{
    ViewBag.Title = "Index";
}

<header class="jumbotron">Quotations Database</header>




<p>

        @using (Html.BeginForm())
        {
            if (!User.Identity.IsAuthenticated)
            {
                <h3>Register or Login to Add Quotes</h3>
            }
            if (User.Identity.IsAuthenticated)
            {   @Html.ActionLink("Create New", "Create", "QuotationsController", new { @class = "btn btn-success" })

            }
            if (User.Identity.IsAuthenticated)
            {
                
                 @Html.ActionLink("Show My Quotes", "Index", "QuotationsController", new { @class = "btn btn-primary" })
            }

        <input type="submit" value="Search" />
        @Html.TextBox("SearchString") <br />
        if (ViewBag.ShowLink == true)
        {
        @Html.ActionLink("Display All", "Index", "QuotationsController", new { @class = "btn btn-primary" })
         }



        }
  </p>



@Html.Grid(Model).Columns(cols =>
        {
            cols.Add(col => col.Category.Name).Titled("Category").Sortable(true);
            cols.Add(col => col.Quote).Titled("Quote"); 
            cols.Add(col => col.Author).Titled("Author").Sortable(true);
            cols.Add(col => col.Date).Format("{0:MM/dd/yyyy}").Titled("Date Added").Sortable(true);
            cols.Add().Encoded(false).Sanitized(false).RenderValueAs(a => @Html.ActionLink("Details", "Details", new { id = a.QuotationID }));
            cols.Add().Encoded(false).Sanitized(false).RenderValueAs(a => @Html.ActionLink("Edit", "Edit", new { id = a.QuotationID }));
            cols.Add().Encoded(false).Sanitized(false).RenderValueAs(a => @Html.ActionLink("Delete", "Delete", new { id = a.QuotationID }));
            
        }).WithPaging(5) 


@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quote)
        </th>
        <th>
            @Html.ActionLink("Author", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quote)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Author)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.QuotationID }) |
            @Html.ActionLink("Details", "Details", new { id=item.QuotationID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.QuotationID })
        </td>
    </tr>
}

</table>*@
